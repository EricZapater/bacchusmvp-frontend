import{C as p,a as u}from"./customers-b1a456f5.js";import{B as o}from"./base.service-136124b3.js";import{a as i,d}from"./functions-8d6e0d81.js";import{t as r}from"./index-e1f2f827.js";class l extends o{async Create(e){const t=`${this.resource}`;return(await this.apiClient.post(t,e)).status===200}async GetBetweenDates(e,t){const s=`${this.resource}?startTime=${e}&endTime=${t}`,n=await this.apiClient.get(s);if(n.status===200)return n.data}async GetBetweenDatesAndStatus(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&statusId=${s}`,a=await this.apiClient.get(n);if(a.status===200)return a.data}async GetBetweenDatesAndCustomer(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&customerId=${s}`,a=await this.apiClient.get(n);if(a.status===200)return a.data}async Update(e){const t=`${this.resource}/${e.id}`;return(await this.apiClient.put(t,e)).status===200}async Delete(e){const t=`${this.resource}/${e.id}`;return(await this.apiClient.delete(t)).status===200}async GetInvoiceableOrderDetails(e){const t=i(d(0,0,-1)),s=i(new Date),n=`${this.resource}/InvoiceableOrderDetails?startTime=${t}&endTime=${s}&customerId=${e}`,a=await this.apiClient.get(n);if(a.status===200)return a.data}async CreateDetail(e){const t=`${this.resource}/Detail`;return(await this.apiClient.post(t,e)).data}async CreateInvoiceDetailsFromOrderDetails(e){const t=`${this.resource}/Detail/FromOrderDetails`;return(await this.apiClient.post(t,e)).status===200}async UpdateDetail(e){const t=`${this.resource}/Detail/${e.id}`;return(await this.apiClient.put(t,e)).status===200}async DeleteDetail(e){const t=`${this.resource}/Detail/${e.id}`;return(await this.apiClient.delete(t)).status===200}}class $ extends o{async Create(e){const t=`${this.resource}`;return(await this.apiClient.post(t,e)).status===200}async GetBetweenDates(e,t){const s=`${this.resource}?startTime=${e}&endTime=${t}`,n=await r.get(s);if(n.status===200)return n.data}async GetBetweenDatesAndCustomer(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&customerId=${s}`,a=await r.get(n);if(a.status===200)return a.data}async CreateDetail(e){const t=`${this.resource}/Detail`;return(await r.post(t,e)).status===200}async UpdateDetail(e){const t=`${this.resource}/Detail/${e.id}`;return(await r.put(t,e)).status===200}async DeleteDetail(e){const t=`${this.resource}/Detail/${e.id}`;return(await r.delete(t)).status===200}}const C={CustomerType:new p("/CustomerType"),Customer:new u("/Customer"),SalesInvoice:new l("/SalesInvoice"),SalesOrder:new $("/SalesOrder")};export{C as s};
