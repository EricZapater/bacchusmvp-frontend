var p=Object.defineProperty;var h=(t,e,a)=>e in t?p(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var n=(t,e,a)=>(h(t,typeof e!="symbol"?e+"":e,a),a);import{au as l,at as u}from"./index-2bfc80b2.js";import{E as d}from"./exercise.service-65855d63.js";import{P as v}from"./paymentmethod.service-1ada7ddf.js";import{T as m}from"./tax.service-2ace897f.js";import{P as s}from"./index-78dd0e83.js";class I{constructor(){n(this,"apiClient");n(this,"resource");this.apiClient=l,this.resource="/File"}async GetEntityFiles(e,a){let i=await this.apiClient.get(`${this.resource}?entity=${e}&entityId=${a}`);if(i.status===200)return i.data}async Download(e){let a=await this.apiClient.post(`${this.resource}/Download`,e,{responseType:"blob"});if(a.status===200)return a.data}async Upload(e,a,i){const r=new FormData;r.append("entity",a),r.append("id",i),r.append("file",e);let c=await this.apiClient.post(`${this.resource}/Upload`,r,{headers:{"Content-Type":"multipart/form-data"}});if(c.status===200)return c.data}async Delete(e){return(await this.apiClient.delete(`${this.resource}/${e}`)).status===200}}const o={File:new I,PaymentMethod:new v("/PaymentMethod"),Tax:new m("/Tax"),Exercice:new d("/Exercise")},x=u({id:"purchaseMasterData",state:()=>({masterData:{paymentMethods:[],series:[],statuses:[],suppliers:[],taxes:[],exercises:[]},purchaseInvoices:void 0}),getters:{},actions:{async fetchMasterData(){this.masterData.series=await s.PurchaseInvoiceSerie.getAll(),this.masterData.statuses=await s.PurchaseInvoiceStatus.getAll(),this.masterData.series=await s.PurchaseInvoiceSerie.getAll(),this.masterData.suppliers=await s.Supplier.getAll(),this.masterData.paymentMethods=await o.PaymentMethod.getAll(),this.masterData.exercises=await o.Exercice.getAll(),this.masterData.taxes=await o.Tax.getAll()}}}),A=u({id:"purchaseInvoices",state:()=>({purchaseInvoice:void 0,purchaseInvoices:void 0}),getters:{},actions:{setNewPurchaseInvoice(t){this.purchaseInvoice={id:t,number:0,supplierNumber:0,purchaseInvoiceDate:new Date,baseAmount:0,transportAmount:0,subtotal:0,taxAmount:0,grossAmount:0,netAmount:0,discountPercentage:0,discountAmount:0,supplierId:"",taxId:"",exerciceId:"",purchaseInvoiceSerieId:"",paymentMethodId:"",purchaseInvoiceStatusId:"",purchaseInvoiceDueDates:[]}},async Create(t){const e=await s.PurchaseInvoice.create(t);if(e)return e},async Update(t){const e=await s.PurchaseInvoice.update(t.id,t),a=await s.PurchaseInvoice.RecreateDueDates(t);if(e&&a)return e},async GetById(t){this.purchaseInvoice=await s.PurchaseInvoice.getById(t)},async GetFiltered(t,e,a,i,r,c){a?this.purchaseInvoices=await s.PurchaseInvoice.GetBetweenDatesAndStatus(t,e,a):i?this.purchaseInvoices=await s.PurchaseInvoice.GetBetweenDatesAndExcludeStatus(t,e,i):r?this.purchaseInvoices=await s.PurchaseInvoice.GetBetweenDatesAndSupplier(t,e,r):this.purchaseInvoices=await s.PurchaseInvoice.GetBetweenDates(t,e)},async GetDueDates(t){const e=await s.PurchaseInvoice.GetDueDates(t);if(e)return e},async UpdateInvoicesStatus(t){const e=await s.PurchaseInvoice.UpdateStatuses(t);return console.log("purchaseMasterData.UpdateInvoicesStatus",e),e}}});export{I as F,o as S,A as a,x as u};
