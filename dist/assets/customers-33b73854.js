import{O as u,E as i}from"./index-8f9bd7f8.js";import{B as c}from"./base.service-906a17a0.js";class n extends c{}class m extends c{async addContact(t){let r=!1;try{const s=await this.apiClient.post(`${this.resource}/Contact`,t);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}async updateContact(t){let r=!1;try{const s=await this.apiClient.put(`${this.resource}/Contact/${t.id}`,t);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}async removeContact(t){let r=!1;try{const s=await this.apiClient.delete(`${this.resource}/Contact/${t}`);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}async addAddress(t){let r=!1;try{const s=await this.apiClient.post(`${this.resource}/Address`,t);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}async updateAddress(t){let r=!1;try{const s=await this.apiClient.put(`${this.resource}/Address/${t.id}`,t);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}async removeAddress(t){let r=!1;try{const s=await this.apiClient.delete(`${this.resource}/Address/${t}`);(s.status===200||s.status===201)&&(r=!0)}catch(s){u(s)}return r}}const a=new m("/Customer"),o=new n("/CustomerType"),C=i({id:"customers",state:()=>({customers:void 0,customerTypes:void 0,customer:void 0,customerType:void 0}),getters:{},actions:{setNewCustomer(e){this.customer={id:e,code:"",comercialName:"",taxName:"",vatNumber:"",web:"",disabled:!1,customerTypeId:""}},async fetchCustomers(){this.customers=await a.getAll()},async fetchCustomer(e){this.customer=await a.getById(e)},async createCustomer(e){const t=await a.create(e);return t&&await this.fetchCustomers(),t},async updateCustomer(e,t){const r=await a.update(e,t);return r&&await this.fetchCustomers(),r},async deleteCustomer(e){const t=await a.delete(e);return t&&await this.fetchCustomers(),t},setNewCustomerType(e){this.customerType={id:e,name:"",description:""}},async fetchCustomerTypes(){this.customerTypes=await o.getAll()},async fetchCustomerType(e){this.customerType=await o.getById(e)},async createCustomerType(e){const t=await o.create(e);return t&&await this.fetchCustomerTypes(),t},async updateCustomerType(e,t){const r=await o.update(e,t);return r&&await this.fetchCustomerTypes(),r},async deleteCustomerType(e){const t=await o.delete(e);return t&&await this.fetchCustomerTypes(),t},async addContactToCustomer(e){const t=await a.addContact(e);return t&&await this.fetchCustomer(e.customerId),t},async updateContactFromCustomer(e){const t=await a.updateContact(e);return t&&await this.fetchCustomer(e.customerId),t},async removeContactFromCustomer(e){const t=await a.removeContact(e.id);return t&&await this.fetchCustomer(e.customerId),t},async addAddressToCustomer(e){const t=await a.addAddress(e);return t&&await this.fetchCustomer(e.customerId),t},async updateAddressFromCustomer(e){const t=await a.updateAddress(e);return t&&await this.fetchCustomer(e.customerId),t},async removeAddressFromCustomer(e){const t=await a.removeAddress(e.id);return t&&await this.fetchCustomer(e.customerId),t}}});export{C as u};
