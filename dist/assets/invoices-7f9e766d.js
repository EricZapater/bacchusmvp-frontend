import{au as o,av as r,at as h}from"./index-2bfc80b2.js";import{B as n}from"./base.service-8b4a1a4e.js";class v extends n{}class I extends n{async addTransition(e){let s=!1;try{const a=await this.apiClient.post(`${this.resource}/Transition`,e);(a.status===200||a.status===201)&&(s=!0)}catch(a){r(a)}return s}async removeTransition(e){let s=!1;try{const a=await this.apiClient.delete(`${this.resource}/Transition/${e.fromStatusId}/${e.toStatusId}`);(a.status===200||a.status===201)&&(s=!0)}catch(a){r(a)}return s}}class S extends n{async getBetweenDates(e,s){try{const a=await o.post(`${this.resource}/GetBetweenDates`,{startDate:e,endDate:s});if(a.status===200)return a.data}catch(a){r(a)}}}const i=new v("/purchaseinvoiceserie"),c=new I("/purchaseinvoicestatus"),u=new S("/purchaseinvoice"),l=h({id:"purchases",state:()=>({purchaseInvoiceSerie:void 0,purchaseInvoiceSeries:void 0,purchaseInvoiceStatus:void 0,purchaseInvoiceStatuses:void 0,purchaseInvoice:void 0,purchaseInvoices:void 0}),getters:{},actions:{setNewPurchaseInvoiceSerie(t){this.purchaseInvoiceSerie={id:t,name:"",description:"",disabled:!1}},async fetchPurchaseInvoiceSeries(){this.purchaseInvoiceSeries=await i.getAll()},async fetchPurchaseInvoiceSerie(t){this.purchaseInvoiceSerie=await i.getById(t)},async createPurchaseInvoiceSerie(t){const e=await i.create(t);return e&&await this.fetchPurchaseInvoiceSeries(),e},async updatePurchaseInvoiceSerie(t,e){const s=await i.update(t,e);return s&&await this.fetchPurchaseInvoiceSeries(),s},async deletePurchaseInvoiceSerie(t){const e=await i.delete(t);return e&&await this.fetchPurchaseInvoiceSeries(),e},setNewPurchaseInvoiceStatus(t){this.purchaseInvoiceStatus={id:t,name:"",description:"",disabled:!1}},async fetchPurchaseInvoiceStatuses(){this.purchaseInvoiceStatuses=await c.getAll()},async fetchPurchaseInvoiceStatus(t){this.purchaseInvoiceStatus=await c.getById(t)},async createPurchaseInvoiceStatus(t){const e=await c.create(t);return e&&await this.fetchPurchaseInvoiceStatuses(),e},async updatePurchaseInvoiceStatus(t,e){const s=await c.update(t,e);return s&&await this.fetchPurchaseInvoiceStatuses(),s},async deletePurchaseInvoiceStatus(t){const e=await c.delete(t);return e&&await this.fetchPurchaseInvoiceStatuses(),e},async createPurchaseInvoiceStatusTransition(t){const e=await c.addTransition(t);return e&&await this.fetchPurchaseInvoiceStatus(t.fromStatusId),e},async deletePurchaseInvoiceStatusTransition(t){const e=await c.removeTransition(t);return e&&await this.fetchPurchaseInvoiceStatus(t.fromStatusId),e},setNewPurchaseInvoice(){this.purchaseInvoice={number:0,supplierNumber:0,purchaseInvoiceDate:new Date,baseAmount:0,transportAmount:0,subtotal:0,taxAmount:0,grossAmount:0,netAmount:0,discountPercentage:0,discountAmount:0,supplierId:"",taxId:"",exerciseId:"",purchaseInvoiceSerieId:"",paymentMethodId:"",purchaseInvoiceStatusId:"",purchaseInvoiceDueDates:[]}},async createPurchaseInvoice(t){const e=await u.create(t);if(e)return e},async getPurchaseInvoiceBetweenDates(t,e){const s=u.getBetweenDates(t,e);if(s)return s}}});export{S as P,l as u};
