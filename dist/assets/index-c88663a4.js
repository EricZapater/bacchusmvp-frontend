import{B as i}from"./base.service-c816a16d.js";import{M as c,t as a}from"./index-75cc375f.js";import{S as p}from"./suppliers.service-1600800e.js";class u extends i{}class d extends i{async getConsolidated(e,t){const s=`${this.resource}/Consolidated?startTime=${e}&endTime=${t}`,n=await this.apiClient.get(s);if(n.status===200)return n.data}async getByExpenseType(e){const t=`${this.resource}/ExpenseType/${e}`,s=await this.apiClient.get(t);if(s.status===200)return s.data}}class $ extends i{}class l extends i{async addTransition(e){let t=!1;try{const s=await this.apiClient.post(`${this.resource}/Transition`,e);(s.status===200||s.status===201)&&(t=!0)}catch(s){c(s)}return t}async removeTransition(e){let t=!1;try{const s=await this.apiClient.delete(`${this.resource}/Transition/${e.fromStatusId}/${e.toStatusId}`);(s.status===200||s.status===201)&&(t=!0)}catch(s){c(s)}return t}}class h extends i{async GetBetweenDates(e,t){const s=`${this.resource}?startTime=${e}&endTime=${t}`,n=await a.get(s);if(n.status===200)return n.data}async GetBetweenDatesAndStatus(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&statusId=${s}`,r=await a.get(n);if(r.status===200)return r.data}async GetBetweenDatesAndExcludeStatus(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&excludeStatusId=${s}`,r=await a.get(n);if(r.status===200)return r.data}async GetBetweenDatesAndSupplier(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&supplierId=${s}`,r=await a.get(n);if(r.status===200)return r.data}async GetDueDates(e){const t=await a.post(`${this.resource}/DueDates`,e);if(t.status===200)return t.data}async RecreateDueDates(e){return(await a.post(`${this.resource}/RecreateDueDates`,e)).status===200}async UpdateStatuses(e){const t=`${this.resource}/UpdateStatuses`;return(await a.post(t,e)).status===200}async CreateImport(e){const t=`${this.resource}/Import`;return(await a.post(t,e)).status===200}async UpdateImport(e){const t=`${this.resource}/Import/${e.id}`;return(await a.put(t,e)).status===200}async DeleteImport(e){const t=`${this.resource}/Import/${e.id}`;return(await a.delete(t)).status===200}}const m={PurchaseInvoice:new h("/PurchaseInvoice"),PurchaseInvoiceSerie:new $("/PurchaseInvoiceSerie"),PurchaseInvoiceStatus:new l("/PurchaseInvoiceStatus"),Supplier:new p("/Supplier"),SupplierType:new p("/SupplierType"),Expense:new d("Expense"),ExpenseType:new u("ExpenseType")};export{m as E};
