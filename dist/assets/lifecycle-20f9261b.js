import{I as s,r as a}from"./index-f2f50ed2.js";import{S as i}from"./index-ac3219c8.js";const r=s({id:"lifecycle",state:()=>({lifecycle:a(void 0),lifecycles:a(void 0)}),getters:{transitions:t=>{const e=[];return t.lifecycle&&t.lifecycle.statuses.forEach(c=>{c.transitions&&e.push(...c.transitions)}),e}},actions:{setNew(t){this.lifecycle={id:t,name:"",description:"",disabled:!1,statuses:[]}},async fetchAll(){this.lifecycles=await i.Lifecycle.getAll()},async fetchOne(t){this.lifecycle=await i.Lifecycle.getById(t)},async fetchOneByName(t){this.lifecycle=await i.Lifecycle.getByName(t)},async create(t){const e=await i.Lifecycle.create(t);return e&&await this.fetchAll(),e},async update(t,e){const c=await i.Lifecycle.update(t,e);return c&&await this.fetchAll(),c},async delete(t){const e=await i.Lifecycle.delete(t);return e&&await this.fetchAll(),e},async createStatus(t){const e=await i.Lifecycle.createStatus(t);return e&&await this.fetchOne(this.lifecycle.id),e},async updateStatus(t,e){const c=await i.Lifecycle.updateStatus(e);return c&&await this.fetchOne(this.lifecycle.id),c},async deleteStatus(t){const e=await i.Lifecycle.deleteStatus(t);return e&&await this.fetchOne(this.lifecycle.id),e},async createTransition(t){const e=await i.Lifecycle.createTransition(t);return e&&await this.fetchOne(this.lifecycle.id),e},async updateTransition(t,e){const c=await i.Lifecycle.updateTransition(e);return c&&await this.fetchOne(this.lifecycle.id),c},async deleteTransition(t){const e=await i.Lifecycle.deleteTransition(t);return e&&await this.fetchOne(this.lifecycle.id),e}}});export{r as u};
